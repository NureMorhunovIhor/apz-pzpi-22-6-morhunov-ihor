Міністерство освіти і науки України
Харківський національний  університет радіоелектроніки

Кафедра програмної інженерії



ЗВІТ
з лабораторної роботи №5
з дисципліни «Архітектура програмного забезпечення»


Виконав:	
ст. гр. ПЗПІ-22-6	
Моргунов І.С.	

Перевірив:
ст. викл. каф. ПІ
Сокорчук І.П.


Харків 2025
1 ІСТОРІЯ ЗМІН
Таблиця 1 – Історія змін 
№	Дата	Версія звіту	Опис змін та виправлень
1	31.05.2025	0.1	Створено розділ «Історія змін»
2	31.05.2025	0.1	Створено розділ «Завдання»
3	31.05.2025	0.1	Створено розділ «Опис виконаної роботи»
4	31.05.2025	0.1	Створено розділ «Висновки»
5	31.05.2025	0.1	Доданий Додаток А

 
2 ЗАВДАННЯ
1.	Необхідно розгорнути програмний застосунок. 
2.	Проаналізуйте завдання. 
3.	Виконайте контрольні завдання. 
4.	Відкрийте створений на попередній лабораторній роботі репозиторій GitHub. 
5.	Створіть у репозиторії директорію Task5 та текстовий файл з описом інженерних рішень у цій частині проєкту, як вказано у додатку З 
6.	Зафіксуйте кожну внесену зміну командою git commit з відповідним коментарем та фіксуйте цією командою усі наступні зміни у проєкті. 
7.	Створіть у директорії Task5 піддиректорію для програмного коду, як вказано у додатку З 
8.	Створіть програмний код, завантажте його у створену піддиректорію, зафіксуйте внесені у репозиторій зміни 
9.	Виконайте функціональне тестування створеного програмного коду та створіть відеозапис цього тестування тривалістю 7..10 хвилин з усними поясненнями процесу тестування 
10.	Завантажте створений відеозапис тестування YouTube канал для вашого облікового запису в домені @nure.ua 
11.	Створіть для завантаженого запису його хронологічний опис. 
12.	Оформіть звіт у форматі pdf та завантажте його на навчальну платформу https://dl.nure.ua/ 
13.	У коментарях до завантаженого звіту вкажіть посилання на відеозапис тестування у вашому каналі YouTube. 
3 ОПИС ВИКОНАНОЇ РОБОТИ
Було виконано авторизацію в обліковому записі Google Cloud та відкрито Google Cloud Console. У консолі обрано проєкт, у рамках якого планувалося створення інстансу бази даних. Проєкт попередньо підготовлено для розгортання необхідної інфраструктури.
Через меню Google Cloud Console було обрано сервіс Cloud SQL, який є керованим рішенням для роботи з базами даних. Цей сервіс підтримує популярні системи управління базами даних, такі як MySQL, PostgreSQL та SQL Server. Використання Cloud SQL забезпечило інтеграцію бази даних із додатком та високий рівень надійності.
Було виконано створення інстансу бази даних за допомогою кнопки "Create Instance" (Створити інстанс) із наступними налаштуваннями:
-	Тип бази даних: Обрано MySQL відповідно до технічних потреб додатку.
-	Назва інстансу: Присвоєно унікальну назву інстансу, наприклад, autoinsure.
-	Регіон і зона: Визначено регіон, найближчий до користувачів чи інфраструктури (наприклад, europe-central2), щоб мінімізувати затримки.
-	Тарифний план: Налаштовано інстанс із 1 vCPU та 3.75 ГБ RAM, що відповідає вимогам невеликих додатків.
-	Обсяг пам’яті: Встановлено обсяг пам’яті в 10 ГБ SSD із можливістю автоматичного масштабування для покриття потенційного зростання навантаження.
 
Рисунок 3.1 – Налаштування інстансу в Google Cloud
У процесі створення інстансу були виконані такі налаштування:
-	Версія СУБД: Обрано актуальну стабільну версію MySQL.
-	Обліковий запис адміністратора: Створено користувача root із встановленням надійного пароля для забезпечення захищеного доступу.
-	Автоматичне резервне копіювання: Активовано автоматичне резервне копіювання (Backup) для відновлення даних у разі збою або втрати.
-	Шифрування: Увімкнено опцію шифрування даних за допомогою ключів, що керуються Google (Customer Managed Encryption Keys).
Після запуску інстансу виконано перехід до Cloud Shell , де консольно було налаштовання з’єднання з локальною БД MySql створено базу даних із назвою АutoІnsure. Ця база стала основним сховищем даних для таблиць додатку.
 
Рисунок 3.2 – Консольні налаштування та створення бази даних
3.1	  Деплой додатку у Google Cloud
Було взято вихідний код з проекту з репозиторію Git, скориставшись командою:
git clone https://github.com/NureMorhunovIhor/arkpz-pzpi-22-6-morhunov-ihor
Після клонування проекту було виконано перехід у його директорію:
cd C:\atark\arkpz-pzpi-22-6-morhunov-ihor\Task5\arkpz-pzpi-22-6-morhunov-ihor-task5 
Для збірки було використано один найпоширеніших інструментів Maven. Maven забезпечує автоматичне керування залежностями через файл pom.xml. Було завантажено всі необхідні залежності, зазначені в pom.xml. Це було зроблено за допомогою команди:
mvn clean install
Після налаштування проєкту виконано команду для збірки JAR-файлу:
mvn package
Після збірки було перевірено наявність файлу, наприклад:
ls target/AutoInsure-0.0.1.jar
Для перевірки працездатності додатку локально виконано команду:
java -jar target/AutoInsure-0.0.1.jar
Після усіх перевірок було розгорнуто проект у хмарному середовищі Google Cloud за допомогою команди:
gcloud app deploy AutoInsure-0.0.1.jar
 
Рисунок 3.3– Консольне налаштування для розгортання проекту в Google Cloud
3.2	 Міграція даних у Google Cloud
Для забезпечення міграції з бази даних було створено спеціальний скрипт, який виконує конвертацію даних з бази в таблиці CSV. Це важливий крок для забезпечення легкого доступу до даних у зрозумілому та зручному для аналізу форматі. Кожен з скриптів таблиць було написано по наступному прикладу:
SELECT * FROM users
INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/users.csv'
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n';
Для передачі даних у Google Cloud було використано Cloud Bucket та Cloud Storage для завантаження і сберігання створенних файлів. Для завантаження даних у Cloud Sql було обрано раніше створений інстанс і базу даних.
 
Рисунок 3.4– Налаштування міграції даних до Google Cloud








4 ВИСНОВКИ
Під час виконання лабораторної роботи було розгорнуто серверну та веб частини програмної системи. 
ДОДАТОК А
Відеозапис та хронологічний опис

Відеозапис доповіді на YouTube: https://youtu.be/oT0QSxNTuwg
Хронологічний опис відеозапису:
0:23 – Тестування регістрації на вебсайту 
0:54 – Тестування створення/редагування/видалення даних
4:35 – Тестування оплати полісів
6:00 – Тестування функцій адміністратора
7:35 – Тестування функцій адміністратора з бізнес-логіки
9:21 – Тестування функції адміністратора з баз даних
10:34 – Тестування мобільної частини застосунку
Посилання на Github: 
https://github.com/NureMorhunovIhor/apz-pzpi-22-6-morhunov-ihor/tree/main/Lab5

